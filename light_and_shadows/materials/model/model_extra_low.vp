
// Positions can be world or local space, since world and normal
// matrices are identity for world vertex space materials.
// If world vertex space is selected, you can remove the
// normal matrix multiplication for optimal performance.

attribute highp vec4 position;
attribute mediump vec2 texcoord0;
attribute highp vec3 normal;

uniform highp mat4 mtx_view;
uniform highp mat4 mtx_proj;
uniform highp mat4 mtx_normal;

varying highp vec4 var_view_pos;
// varying highp vec3 var_vert_pos;
varying highp vec4 var_position;
varying highp vec3 var_normal;
varying mediump vec2 var_texcoord0;
varying highp mat4 vmtx_view;

void main()
{

    vec4 p = mtx_view * vec4(position.xyz, 1.0);
    var_view_pos = p;
    // var_vert_pos = normalize(-vec3(p));
    var_position = position;
    var_texcoord0 = texcoord0;
    vmtx_view = mtx_view;
    var_normal = normalize(normal);
    // var_normal = normalize((mtx_normal * vec4(normal, 0.0)).xyz);
    gl_Position = mtx_proj * p;
  
}

