#version 140

// Positions can be world or local space, since world and normal
// matrices are identity for world vertex space materials.
// If world vertex space is selected, you can remove the
// normal matrix multiplication for optimal performance.

in highp vec4 position;
in mediump vec2 texcoord0;
in highp vec3 normal;
in mediump vec4 color0;

uniform vs_uniforms
{
    highp mat4 mtx_view;
    highp mat4 mtx_proj;
    highp mat4 mtx_normal;
    highp mat4 mtx_light;
};

out highp vec4 var_view_position;
out highp vec4 var_position;
out highp vec3 var_normal;
out mediump vec2 var_texcoord0;
out mediump vec4 var_color0;
out highp vec4 var_texcoord0_shadow;

void main()
{
    vec4 p = mtx_view * vec4(position.xyz, 1.0);
    var_view_position = p;
    var_color0 = color0;
    var_position = position;
    var_texcoord0 = texcoord0;
    var_texcoord0_shadow = mtx_light * position;

    var_normal = normalize(normal);
    // var_normal = normalize((mtx_normal * vec4(normal, 0.0)).xyz);
    gl_Position = mtx_proj * p;
  
}


